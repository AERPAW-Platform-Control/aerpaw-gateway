# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.node import Node  # noqa: F401,E501
from swagger_server.models.vnode import Vnode  # noqa: F401,E501
from swagger_server import util


class Resource(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, nodes: List[Node]=None, vnodes: List[Vnode]=None, rspec: str=None):  # noqa: E501
        """Resource - a model defined in Swagger

        :param nodes: The nodes of this Resource.  # noqa: E501
        :type nodes: List[Node]
        :param vnodes: The vnodes of this Resource.  # noqa: E501
        :type vnodes: List[Vnode]
        :param rspec: The rspec of this Resource.  # noqa: E501
        :type rspec: str
        """
        self.swagger_types = {
            'nodes': List[Node],
            'vnodes': List[Vnode],
            'rspec': str
        }

        self.attribute_map = {
            'nodes': 'nodes',
            'vnodes': 'vnodes',
            'rspec': 'rspec'
        }
        self._nodes = nodes
        self._vnodes = vnodes
        self._rspec = rspec

    @classmethod
    def from_dict(cls, dikt) -> 'Resource':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Resource of this Resource.  # noqa: E501
        :rtype: Resource
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nodes(self) -> List[Node]:
        """Gets the nodes of this Resource.


        :return: The nodes of this Resource.
        :rtype: List[Node]
        """
        return self._nodes

    @nodes.setter
    def nodes(self, nodes: List[Node]):
        """Sets the nodes of this Resource.


        :param nodes: The nodes of this Resource.
        :type nodes: List[Node]
        """

        self._nodes = nodes

    @property
    def vnodes(self) -> List[Vnode]:
        """Gets the vnodes of this Resource.


        :return: The vnodes of this Resource.
        :rtype: List[Vnode]
        """
        return self._vnodes

    @vnodes.setter
    def vnodes(self, vnodes: List[Vnode]):
        """Sets the vnodes of this Resource.


        :param vnodes: The vnodes of this Resource.
        :type vnodes: List[Vnode]
        """

        self._vnodes = vnodes

    @property
    def rspec(self) -> str:
        """Gets the rspec of this Resource.


        :return: The rspec of this Resource.
        :rtype: str
        """
        return self._rspec

    @rspec.setter
    def rspec(self, rspec: str):
        """Sets the rspec of this Resource.


        :param rspec: The rspec of this Resource.
        :type rspec: str
        """

        self._rspec = rspec
